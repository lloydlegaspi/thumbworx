version: "3.8"
services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: thumbworx
      POSTGRES_USER: thumb_user
      POSTGRES_PASSWORD: thumb_pass
      # Multiple databases will be created via init script
    ports: ["5432:5432"]
    volumes: 
      - "pgdata:/var/lib/postgresql/data"
      - "./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U thumb_user -d thumbworx"]
      interval: 5s
      timeout: 5s
      retries: 5
 
  redis:
    image: redis:7
    ports: ["6379:6379"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
 
  flask:
    build: ../ai-flask
    command: gunicorn app:app -b 0.0.0.0:5000 --workers=3
    ports: ["5000:5000"]
    environment:
      - DATABASE_URL=postgresql://thumb_user:thumb_pass@postgres:5432/thumbworx
      - REDIS_URL=redis://redis:6379/0
      - TRACCAR_BASE_URL=https://demo.traccar.org
      - TRACCAR_USER=jlloyd.legaspi@gmail.com
      - TRACCAR_PASS=0107lloyd03
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
 
  laravel:
    build: ../backend-laravel
    ports: ["8000:80"]
    environment:
      - DB_HOST=postgres
      - DB_DATABASE=thumbworx
      - DB_USERNAME=thumb_user
      - DB_PASSWORD=thumb_pass
      - TRACCAR_BASE_URL=https://demo.traccar.org
      - TRACCAR_USER=demo_user
      - TRACCAR_PASS=demo_pass
    depends_on:
      postgres:
        condition: service_healthy
 
  next:
    build: ../frontend-next
    ports: ["3000:3000"]
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000

  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    hostname: metabase
    volumes:
      - /dev/urandom:/dev/random:ro
    ports:
      - "3001:3000"
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: metabase
      MB_DB_PORT: 5432
      MB_DB_USER: thumb_user
      MB_DB_PASS: thumb_pass
      MB_DB_HOST: postgres
    healthcheck:
      test: curl --fail -I http://localhost:3000/api/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  pgdata: